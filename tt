1. 环境准备
JDK 17: 安装并配置JDK 17。

JBoss EAP 8: 下载并安装JBoss EAP 8。

JBoss Tools: 安装JBoss Tools插件到你的IDE（如Eclipse）。

Maven: 用于项目构建和依赖管理。

2. 项目结构
创建一个Maven项目，结构如下：

Copy
my-enterprise-app/
│
├── my-ejb-module/          // EJB模块
│   ├── src/main/java/      // EJB业务逻辑
│   ├── src/main/resources/ // 配置文件
│   └── pom.xml             // EJB模块的POM文件
│
├── my-web-module/          // Web模块
│   ├── src/main/java/      // Spring MVC控制器
│   ├── src/main/webapp/    // JSP页面和静态资源
│   ├── src/main/resources/ // 配置文件
│   └── pom.xml             // Web模块的POM文件
│
└── pom.xml                 // 父POM文件
3. EJB模块
在my-ejb-module中，创建一个EJB来处理业务逻辑。

3.1 创建实体类
java
Copy
package com.example.model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;

@Entity
public class MyEntity {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String name;

    // Getters and Setters
}
3.2 创建EJB
java
Copy
package com.example.ejb;

import com.example.model.MyEntity;
import jakarta.ejb.Stateless;
import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import java.util.List;

@Stateless
public class MyEntityEJB {

    @PersistenceContext
    private EntityManager em;

    public void create(MyEntity entity) {
        em.persist(entity);
    }

    public List<MyEntity> findAll() {
        return em.createQuery("SELECT e FROM MyEntity e", MyEntity.class).getResultList();
    }

    public MyEntity update(MyEntity entity) {
        return em.merge(entity);
    }

    public void delete(Long id) {
        MyEntity entity = em.find(MyEntity.class, id);
        if (entity != null) {
            em.remove(entity);
        }
    }
}
4. Web模块
在my-web-module中，使用Spring MVC和JSP来实现前端界面。

4.1 创建Spring MVC控制器
java
Copy
package com.example.web;

import com.example.ejb.MyEntityEJB;
import com.example.model.MyEntity;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping("/entities")
public class MyEntityController {

    @Autowired
    private MyEntityEJB entityEJB;

    @GetMapping
    public String listEntities(Model model) {
        model.addAttribute("entities", entityEJB.findAll());
        return "entities/list";
    }

    @GetMapping("/new")
    public String newEntityForm(Model model) {
        model.addAttribute("entity", new MyEntity());
        return "entities/form";
    }

    @PostMapping
    public String saveEntity(@ModelAttribute MyEntity entity) {
        entityEJB.create(entity);
        return "redirect:/entities";
    }

    @GetMapping("/edit/{id}")
    public String editEntityForm(@PathVariable Long id, Model model) {
        model.addAttribute("entity", entityEJB.findAll().stream()
                .filter(e -> e.getId().equals(id))
                .findFirst()
                .orElseThrow(() -> new IllegalArgumentException("Invalid entity Id:" + id)));
        return "entities/form";
    }

    @PostMapping("/update")
    public String updateEntity(@ModelAttribute MyEntity entity) {
        entityEJB.update(entity);
        return "redirect:/entities";
    }

    @GetMapping("/delete/{id}")
    public String deleteEntity(@PathVariable Long id) {
        entityEJB.delete(id);
        return "redirect:/entities";
    }
}
4.2 创建JSP页面
在src/main/webapp/WEB-INF/views/entities/目录下创建list.jsp和form.jsp。

list.jsp

jsp
Copy
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<html>
<head>
    <title>Entities</title>
</head>
<body>
    <h1>Entities</h1>
    <a href="<c:url value='/entities/new' />">Add New Entity</a>
    <table>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Actions</th>
        </tr>
        <c:forEach items="${entities}" var="entity">
            <tr>
                <td>${entity.id}</td>
                <td>${entity.name}</td>
                <td>
                    <a href="<c:url value='/entities/edit/${entity.id}' />">Edit</a>
                    <a href="<c:url value='/entities/delete/${entity.id}' />">Delete</a>
                </td>
            </tr>
        </c:forEach>
    </table>
</body>
</html>
form.jsp

jsp
Copy
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<html>
<head>
    <title>Entity Form</title>
</head>
<body>
    <h1>Entity Form</h1>
    <form action="<c:url value='/entities' />" method="post">
        <input type="hidden" name="id" value="${entity.id}" />
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" value="${entity.name}" />
        <button type="submit">Save</button>
    </form>
</body>
</html>
5. 配置文件和POM
5.1 persistence.xml (EJB模块)
xml
Copy
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" version="2.1">
    <persistence-unit name="myPU">
        <jta-data-source>java:/MyDS</jta-data-source>
        <class>com.example.model.MyEntity</class>
        <properties>
            <property name="hibernate.hbm2ddl.auto" value="update" />
        </properties>
    </persistence-unit>
</persistence>
Run HTML
5.2 applicationContext.xml (Web模块)
xml
Copy
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean class="com.example.web.MyEntityController" />
</beans>
Run HTML
5.3 web.xml (Web模块)
xml
Copy
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" version="4.0">
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value></param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>
Run HTML
5.4 父POM文件
xml
Copy
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>my-enterprise-app</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <modules>
        <module>my-ejb-module</module>
        <module>my-web-module</module>
    </modules>
</project>
Run HTML
5.5 EJB模块POM文件
xml
Copy
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.example</groupId>
        <artifactId>my-enterprise-app</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>my-ejb-module</artifactId>
    <packaging>ejb</packaging>
    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>8.0.0</version>
        </dependency>
    </dependencies>
</project>
Run HTML
5.6 Web模块POM文件
xml
Copy
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.example</groupId>
        <artifactId>my-enterprise-app</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>my-web-module</artifactId>
    <packaging>war</packaging>
    <dependencies>
        <dependency>
            <groupId>com.example</groupId>
            <artifactId>my-ejb-module</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>5.3.20</version>
        </dependency>
    </dependencies>
</project>
Run HTML
6. 打包和部署
在项目根目录下运行以下命令来打包项目：

bash
Copy
mvn clean install
这将生成一个EAR文件，可以部署到JBoss EAP 8服务器上。

7. 部署到JBoss EAP 8
将生成的EAR文件复制到JBoss EAP 8的standalone/deployments/目录下，服务器会自动部署应用程序。

8. 访问应用程序
打开浏览器，访问http://localhost:8080/my-web-module/entities，你应该能够看到实体列表，并进行增删改查操作。

总结
通过这个项目，你可以学习到如何使用EJB 4.2、JDK 17、JBoss Tools、JBoss EAP 8、Spring MVC、JSP和Jakarta EE来构建一个企业级Java应用程序。这个应用程序实现了基本的CRUD操作，并且能够打包成EAR文件部署到JBoss EAP 8服务器上。

 <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

 <bean id="productService" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:global/myApp/ProductServiceBean!com.example.ejb.ProductService"/>
    </bean>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/jee
           http://www.springframework.org/schema/jee/spring-jee.xsd">

  <!-- 配置 EJB 引用 -->
    <jee:jndi-lookup id="myEJB" jndi-name="java:global/my-ejb-module/MyEJBImpl!com.example.ejb.MyEJB" />






<?xml version="1.0" encoding="UTF-8"?>
<jboss-web version="7.1" xmlns="http://www.jboss.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.jboss.com/xml/ns/javaee http://www.jboss.org/schema/jbossas/jboss-web_7_1.xsd">
    <ejb-ref>
    	<ejb-ref-name></ejb-ref-name>
    </ejb-ref>
</jboss-web>





		<!-- JAXB 运行时 -->
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>4.0.0</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>xjc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<sources>
						<source>src/main/resources/schema.xsd</source>
					</sources>
					<!--
                <schemaDirectory>src/main/resources/xsd</schemaDirectory>
                -->
					<generateDirectory>src/main/java</generateDirectory>
				</configuration>
			</plugin>


			<!-- 配置当前项目的jdk版本信息 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>17</source>
					<target>17</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
